{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Workspace\\\\Project\\\\Authentication\\\\client\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:5000/api/quote', {\n      method: 'POST',\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:5000/api/quote', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/Workspace/Project/Authentication/client/src/Dashboard.js"],"names":["React","useEffect","useState","jwt","useHistory","Dashboard","history","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","method","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","updateQuote","event","preventDefault","body","JSON","stringify","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory()\r\n\tconst [quote, setQuote] = useState('')\r\n\tconst [tempQuote, setTempQuote] = useState('')\r\n\r\n\tasync function populateQuote() {\r\n\t\tconst req = await fetch('http://localhost:5000/api/quote', {\r\n            method:'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(data.quote)\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\t\tif (token) {\r\n\t\t\tconst user = jwt.decode(token)\r\n\t\t\tif (!user) {\r\n\t\t\t\tlocalStorage.removeItem('token')\r\n\t\t\t\thistory.replace('/login')\r\n\t\t\t} else {\r\n\t\t\t\tpopulateQuote()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tasync function updateQuote(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst req = await fetch('http://localhost:5000/api/quote', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tquote: tempQuote,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(tempQuote)\r\n\t\t\tsetTempQuote('')\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Your quote: {quote || 'No quote found'}</h1>\r\n\t\t\t<form onSubmit={updateQuote}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Quote\"\r\n\t\t\t\t\tvalue={tempQuote}\r\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value=\"Update quote\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}